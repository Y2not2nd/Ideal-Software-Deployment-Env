name: update-with-feature
on:
  workflow_dispatch: # or push to main after merging v2
  push:
    branches: [ main ]
jobs:
  # 1. Terraform Security Scan (tfsec)
  tfsec_scan:
    name: tfsec Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Terraform Security Scan
        uses: triat/terraform-security-scan@v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # 2. Build and Deploy v2 with Feature
  build_and_deploy_feature:
    name: Build and Deploy v2 with Feature
    runs-on: ubuntu-latest
    needs: [tfsec_scan] # ensure tfsec still passes on any IaC updates
    steps:
      - uses: actions/checkout@v3
      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Docker login to ACR
      - uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.ACR_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      # Build and push Docker image for v2
      - name: Build and Push Docker image (v2)
        run: |
          IMAGE_NAME="${{ secrets.ACR_LOGIN_SERVER }}/clickcounter:${GITHUB_SHA}"
          docker build -f src/v2/Dockerfile -t $IMAGE_NAME src/v2
          docker push $IMAGE_NAME

      # Deploy v2 to staging slot
      - name: Deploy v2 to Staging Slot
        uses: azure/webapps-deploy@v2
        with:
          app-name: "yassin-matek-app"
          slot-name: "staging"
          images: ${{ secrets.ACR_LOGIN_SERVER }}/clickcounter:${{ github.sha }}

      # Swap staging into production (v2 becomes live)
      - name: Swap Slots to Release v2
        run: |
          az webapp deployment slot swap \
            --resource-group yassin-matek-rg \
            --name yassin-matek-app \
            --slot staging

      # Enable Dark Mode feature flag via App Setting
      - name: Enable Dark Mode
        run: |
          az webapp config appsettings set \
            --resource-group yassin-matek-rg \
            --name yassin-matek-app \
            --settings DarkModeEnabled=true

      # Run integration tests
      - name: Run Integration Tests
        run: |
          dotnet test tests/integration/IntegrationTests.csproj --no-build --verbosity normal
        env:
          KEY_VAULT_NAME: ${{ secrets.KEY_VAULT_NAME }}

      - name: Post-Deployment Log Check
        run: az webapp log tail --name yassin-matek-app --resource-group yassin-matek-rg
