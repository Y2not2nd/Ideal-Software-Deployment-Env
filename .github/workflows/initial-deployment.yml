name: initial-deployment
on:
  push:
    branches: [ main ]
jobs:
  # 1. Static Code Analysis (CodeQL)
  codeql_analysis:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: csharp
      - name: Autobuild
        uses: github/codeql-action/autobuild@v2
      - name: Run CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  # 2. Dockerfile Linting (Hadolint)
  docker_lint:
    name: Lint Dockerfile
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Hadolint
        uses: hadolint/hadolint-action@v1.6.0
        with:
          dockerfile: './src/v1/Dockerfile'

  # 3. Terraform Security Scan (tfsec)
  tfsec_scan:
    name: tfsec Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Terraform Security Scan
        uses: triat/terraform-security-scan@v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # 4. Build, Test, and Deploy
  build_and_deploy:
    name: Build and Deploy to Azure
    runs-on: ubuntu-latest
    needs: [codeql_analysis, docker_lint, tfsec_scan]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Azure Login (Service Principal)
      - name: Sign in to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Docker login to ACR using Azure credentials
      - name: Azure Container Registry Login
        run: |
          az acr login --name yassindevacr

      # Build and push Docker image for v1
      - name: Build and Push Docker image
        run: |
          IMAGE_NAME="${{ secrets.ACR_LOGIN_SERVER }}/clickcounter:${GITHUB_SHA}"
          docker build -f src/v1/Dockerfile -t $IMAGE_NAME src/v1
          docker push $IMAGE_NAME

      # Deploy to staging slot
      - name: Deploy to Staging Slot
        uses: azure/webapps-deploy@v2
        with:
          app-name: "yassin-matek-app"
          slot-name: "staging"
          images: ${{ secrets.ACR_LOGIN_SERVER }}/clickcounter:${{ github.sha }}

      # Swap staging into production
      - name: Swap Slots
        run: |
          az webapp deployment slot swap \
            --resource-group yassin-matek-rg \
            --name yassin-matek-app \
            --slot staging

      # Build and run integration tests
      - name: Build Integration Tests
        run: dotnet build tests/integration/IntegrationTests.csproj
      
      - name: Run Integration Tests
        run: |
          dotnet test tests/integration/IntegrationTests.csproj --no-build --verbosity normal
        env:
          KEY_VAULT_NAME: ${{ secrets.KEY_VAULT_NAME }}

      # (Optional) Tail logs for verification
      - name: Check Azure App Logs
        run: az webapp log tail --name yassin-matek-app --resource-group yassin-matek-rg --slot production
